from findBlobs import *
#import glob
#files = glob.glob("Boards/*.jpg")
#print(findBlobs("boards/1.jpg")[1])
successes=0
#Boards for testing and optimizing. Currently the first 36:
boards=[
[['G', 'O', 'F', 'F', 'F'],
 ['G', 'F', 'F', 'F', 'G'],
 ['G', 'W', 'K', 'F', 'G'],
 ['G', 'W', 'O', 'G', 'G'],
 ['F', 'O', 'O', 'G', 'A']],#1

[['A', 'W', 'A', 'M', 'W'],
 ['M', 'W', 'A', 'A', 'F'],
 ['M', 'W', 'K', 'A', 'A'],
 ['M', 'M', 'G', 'G', 'A'],
 ['A', 'A', 'W', 'W', 'G']],#2

[['W', 'A', 'F', 'F', 'F'],
 ['A', 'A', 'F', 'F', 'F'],
 ['M', 'A', 'K', 'F', 'O'],
 ['A', 'F', 'F', 'F', 'O'],
 ['O', 'O', 'O', 'F', 'O']],#3

[['O', 'A', 'A', 'W', 'A'],
 ['O', 'A', 'G', 'G', 'A'],
 ['O', 'A', 'A', 'A', 'A'],
 ['O', 'A', 'A', 'F', 'F'],
 ['O', 'O', 'K', 'O', 'O']],#4

[['G', 'O', 'F', 'F', 'F'],
 ['G', 'F', 'F', 'F', 'G'],
 ['G', 'W', 'K', 'F', 'G'],
 ['G', 'W', 'O', 'G', 'G'],
 ['F', 'O', 'O', 'G', 'A']],#5

[['A', 'W', 'A', 'M', 'W'],
 ['M', 'W', 'A', 'A', 'F'],
 ['M', 'W', 'K', 'A', 'A'],
 ['M', 'M', 'G', 'G', 'A'],
 ['A', 'A', 'W', 'W', 'G']],#6

[['W', 'A', 'F', 'F', 'F'],
 ['A', 'A', 'F', 'F', 'F'],
 ['M', 'A', 'K', 'F', 'O'],
 ['A', 'F', 'F', 'F', 'O'],
 ['O', 'O', 'O', 'F', 'O']],#7

[['O', 'A', 'A', 'W', 'A'],
 ['O', 'A', 'G', 'G', 'A'],
 ['O', 'A', 'A', 'A', 'A'],
 ['O', 'A', 'A', 'F', 'F'],
 ['O', 'O', 'K', 'O', 'O']],#8

[['K', 'M', 'A', 'A', 'G'],
 ['A', 'G', 'O', 'A', 'F'],
 ['K', 'G', 'G', 'A', 'A'],
 ['A', 'W', 'A', 'A', 'K'],
 ['W', 'W', 'A', 'A', 'O']],#9

[['A', 'M', 'M', 'M', 'K'],
 ['O', 'F', 'W', 'W', 'K'],
 ['O', 'O', 'K', 'W', 'A'],
 ['O', 'O', 'F', 'A', 'A'],
 ['O', 'O', 'F', 'F', 'F']],#10

[['F', 'F', 'F', 'F', 'F'],
 ['O', 'A', 'A', 'F', 'F'],
 ['O', 'A', 'A', 'F', 'K'],
 ['O', 'G', 'G', 'F', 'F'],
 ['K', 'K', 'G', 'F', 'F']],#11

[['A', 'A', 'G', 'G', 'K'],
 ['F', 'O', 'O', 'O', 'K'],
 ['G', 'G', 'G', 'F', 'O'],
 ['G', 'W', 'G', 'A', 'O'],
 ['W', 'W', 'K', 'A', 'O']],#12

[['K', 'M', 'A', 'A', 'G'],
 ['S', 'G', 'O', 'A', 'F'],
 ['K', 'G', 'G', 'A', 'A'],
 ['A', 'W', 'A', 'A', 'K'],
 ['W', 'W', 'A', 'A', 'O']],#13

[['A', 'M', 'M', 'M', 'K'],
 ['O', 'F', 'W', 'W', 'K'],
 ['O', 'O', 'K', 'W', 'A'],
 ['O', 'O', 'F', 'A', 'A'],
 ['O', 'O', 'F', 'F', 'F']],#14

[['F', 'F', 'F', 'F', 'F'],
 ['O', 'A', 'A', 'F', 'F'],
 ['O', 'A', 'A', 'F', 'K'],
 ['O', 'G', 'G', 'F', 'F'],
 ['K', 'K', 'G', 'F', 'F']],#15

[['A', 'A', 'F', 'G', 'K'],
 ['F', 'O', 'O', 'O', 'K'],
 ['G', 'G', 'G', 'F', 'O'],
 ['G', 'W', 'G', 'A', 'O'],
 ['W', 'W', 'K', 'A', 'O']],#16

[['W', 'G', 'W', 'A', 'F'],
 ['W', 'G', 'W', 'A', 'F'],
 ['W', 'G', 'K', 'A', 'F'],
 ['W', 'G', 'O', 'O', 'F'],
 ['A', 'G', 'O', 'O', 'O']],#17

[['G', 'F', 'A', 'A', 'O'],
 ['K', 'F', 'F', 'A', 'A'],
 ['K', 'F', 'K', 'A', 'A'],
 ['F', 'F', 'F', 'F', 'F'],
 ['O', 'O', 'F', 'F', 'F']],#18

[['A', 'G', 'F', 'G', 'O'],
 ['A', 'G', 'G', 'G', 'A'],
 ['M', 'W', 'K', 'F', 'A'],
 ['M', 'M', 'A', 'F', 'W'],
 ['A', 'A', 'A', 'A', 'A']],#19

[['O', 'O', 'O', 'O', 'O'],
 ['F', 'W', 'G', 'F', 'O'],
 ['M', 'W', 'K', 'F', 'O'],
 ['M', 'M', 'G', 'G', 'O'],
 ['A', 'A', 'A', 'A', 'A']],#20

[['W', 'G', 'W', 'A', 'F'],
 ['W', 'G', 'W', 'A', 'F'],
 ['W', 'G', 'K', 'A', 'F'],
 ['W', 'G', 'O', 'O', 'F'],
 ['A', 'G', 'O', 'O', 'O']],#21

[['G', 'F', 'A', 'A', 'O'],
 ['K', 'F', 'F', 'A', 'A'],
 ['K', 'F', 'K', 'A', 'A'],
 ['F', 'F', 'F', 'F', 'F'],
 ['O', 'O', 'F', 'F', 'F']],#22

[['A', 'G', 'F', 'G', 'O'],
 ['A', 'G', 'G', 'G', 'A'],
 ['M', 'W', 'K', 'F', 'A'],
 ['M', 'M', 'A', 'F', 'W'],
 ['A', 'A', 'A', 'A', 'A']],#23

[['O', 'O', 'O', 'O', 'O'],
 ['F', 'W', 'G', 'F', 'O'],
 ['M', 'W', 'K', 'F', 'O'],
 ['M', 'M', 'G', 'G', 'O'],
 ['A', 'A', 'A', 'A', 'A']],#24

[['K', 'O', 'O', 'O', 'A'],
 ['K', 'F', 'F', 'O', 'A'],
 ['O', 'F', 'K', 'O', 'A'],
 ['O', 'F', 'W', 'M', 'A'],
 ['G', 'F', 'M', 'M', 'A']],#25

[['F', 'F', 'F', 'F', 'O'],
 ['F', 'A', 'F', 'F', 'O'],
 ['M', 'A', 'K', 'F', 'O'],
 ['A', 'A', 'F', 'F', 'O'],
 ['O', 'O', 'O', 'O', 'O']],#26

[['G', 'G', 'A', 'A', 'A'],
 ['O', 'G', 'G', 'A', 'F'],
 ['O', 'G', 'K', 'A', 'F'],
 ['G', 'G', 'A', 'A', 'F'],
 ['A', 'G', 'F', 'F', 'F']],#27

[['M', 'M', 'A', 'A', 'W'],
 ['W', 'W', 'G', 'G', 'F'],
 ['W', 'W', 'W', 'G', 'K'],
 ['W', 'W', 'W', 'G', 'G'],
 ['A', 'A', 'A', 'A', 'A']],#28

[['A', 'A', 'A', 'A', 'A'],
 ['O', 'O', 'O', 'M', 'M'],
 ['O', 'F', 'K', 'W', 'M'],
 ['O', 'F', 'F', 'F', 'F'],
 ['K', 'K', 'O', 'O', 'G']],#29

[['F', 'F', 'F', 'F', 'O'],
 ['F', 'A', 'F', 'F', 'O'],
 ['M', 'A', 'K', 'F', 'O'],
 ['A', 'A', 'F', 'F', 'O'],
 ['O', 'O', 'O', 'O', 'O']],#30

[['G', 'G', 'A', 'A', 'A'],
 ['O', 'G', 'G', 'A', 'F'],
 ['O', 'G', 'K', 'A', 'F'],
 ['G', 'G', 'A', 'A', 'F'],
 ['A', 'G', 'F', 'F', 'F']],#31

[['M', 'M', 'A', 'A', 'W'],
 ['W', 'W', 'G', 'G', 'F'],
 ['W', 'W', 'W', 'G', 'K'],
 ['W', 'W', 'W', 'G', 'G'],
 ['A', 'A', 'A', 'A', 'A']],#32

[['G', 'A', 'O', 'O', 'O'],
 ['A', 'A', 'W', 'A', 'F'],
 ['O', 'A', 'K', 'F', 'F'],
 ['O', 'F', 'F', 'F', 'K'],
 ['O', 'F', 'A', 'A', 'K']],#33

[['W', 'W', 'K', 'G', 'G'],
 ['W', 'A', 'A', 'G', 'G'],
 ['W', 'M', 'A', 'A', 'A'],
 ['W', 'G', 'A', 'F', 'A'],
 ['F', 'G', 'A', 'M', 'O']],#34

[['W', 'A', 'F', 'F', 'F'],
 ['W', 'F', 'F', 'O', 'O'],
 ['A', 'A', 'K', 'O', 'O'],
 ['A', 'A', 'A', 'O', 'O'],
 ['M', 'M', 'M', 'M', 'W']],#35

[['A', 'F', 'F', 'F', 'W'],
 ['A', 'A', 'F', 'K', 'G'],
 ['G', 'A', 'F', 'F', 'G'],
 ['O', 'F', 'F', 'G', 'G'],
 ['O', 'A', 'O', 'G', 'O']],#36

]
#Boards for veryfiyng the successrate:
boardsVerify=[]
for i in range(len(boards)): #for every board
    print(findBlobs("boards/"+str(i+1)+".jpg")[1]) #print what the findBlobs function finds the board to be
    if np.all(findBlobs("boards/"+str(i+1)+".jpg")[1] == boards[i]): #if the found board is the same as the real one print "SUCCESS! #n"
        print("SUCCESS! #"+str(i+1)) 
        successes+=1
    else:
        print("Fail #"+str(i+1))
print("succesrate= "+str(successes)+ "/"+str(len(boards))+ " = "+str(successes/len(boards)*100)+"%")
